import streamlit as st
import random
import pandas as pd
from pprint import pprint

def avaliacao(individuo):
    choque = 0
    for h in range(0, 20):
        for i in range(0, 5):
            for j in range(0, 4 - i):
                if individuo[i * 20 + h]["professor"] == individuo[i * 20 + ((j + 1) * 20) + h]["professor"]:
                    choque += 1

    return choque


def pop_inicial(periodos, tam_pop):
    pop = [[{} for _ in range(100)] for _ in range(tam_pop)]
    for k in range(tam_pop):
        j = 0
        for periodo in periodos:
            aux = []
            for disciplina in periodo:
                aux.extend([disciplina] * 4)
            random.shuffle(aux)
            for s in aux:
                pop[k][j] = s
                j += 1
    return pop


def formatar_em_grade(lista_20_disciplinas):
    dias = ['SEG', 'TER', 'QUA', 'QUI', 'SEX']
    grade = {dia: [] for dia in dias}

    for i, dia in enumerate(dias):
        for j in range(4):
            d = lista_20_disciplinas[i * 4 + j]
            texto = f"{d['nome']}\n({d['professor']})"
            grade[dia].append(texto)

    return pd.DataFrame(grade)


# Dados
disciplinas = [
    "Introdu√ß√£o √† Programa√ß√£o", "Matem√°tica Discreta", "Algoritmos", "Fundamentos de Sistemas de Informa√ß√£o", "Comunica√ß√£o e Express√£o",
    "Programa√ß√£o Orientada a Objetos", "C√°lculo I", "Banco de Dados I", "Arquitetura de Computadores", "Sociologia",
    "Estrutura de Dados", "Engenharia de Software I", "C√°lculo II", "Banco de Dados II", "Contabilidade",
    "Redes de Computadores", "Sistemas Operacionais", "Engenharia de Software II", "Estat√≠stica", "√âtica e Cidadania",
    "Intelig√™ncia Artificial", "Compiladores", "Computa√ß√£o Gr√°fica", "Gest√£o de Projetos", "Trabalho de Conclus√£o de Curso"
]

professores = [
    "Prof. Ana Martins", "Prof. Carlos Souza", "Prof. Beatriz Lima", "Prof. Jo√£o Oliveira", "Prof. Larissa Costa",
    "Prof. Pedro Ribeiro", "Prof. Fernanda Rocha", "Prof. Marcelo Andrade", "Prof. Aline Duarte", "Prof. Rafael Nunes"
]

todas_disciplinas = [
    {"nome": disciplina, "professor": professores[i % len(professores)]}
    for i, disciplina in enumerate(disciplinas)
]



periodos_determinados = [
    todas_disciplinas[0:5],
    todas_disciplinas[5:10],
    todas_disciplinas[10:15],
    todas_disciplinas[15:20],
    todas_disciplinas[20:25],
]

st.set_page_config(page_title="Popula√ß√£o Inicial", layout="wide")
st.title("üß¨ Gerador de Popula√ß√£o Inicial de Hor√°rios")


tam_pop_determinada = st.slider("Tamanho da popula√ß√£o", 1, 100, 5)

if st.button("Gerar popula√ß√£o"):
    populacao = pop_inicial(periodos_determinados, tam_pop_determinada)

    populacao_com_choque = [ { "horarios": individuo, "choques": avaliacao(individuo) } for individuo in populacao ]

    for idx, individuo in enumerate(populacao_com_choque):
        st.markdown(f"## üë§ Indiv√≠duo {idx+1} - Choques: {individuo["choques"]}")

        for p in range(5):
            inicio = p * 20
            fim = inicio + 20
            periodo_data = individuo["horarios"][inicio:fim]
            st.markdown(f"### üóìÔ∏è {p+1}¬∫ Per√≠odo")
            tabela = formatar_em_grade(periodo_data)
            st.dataframe(
                tabela.style.set_properties(**{
                    'text-align': 'center',
                    'white-space': 'pre-wrap',
                    'font-size': '13px',
                    'width': '1000px'
                }),
                use_container_width=True
            )

        st.markdown("---")
